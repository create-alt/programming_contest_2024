"""
goalのboardを予め設定してそれに対してcutterの1の間隔に沿って端からピースを移動させる
これによって確実にgoalへたどり着けることが保証されたboardを作成できる
もしかしたらこれを利用すれば本番でも、データのgoalに関してのデータを生成でき、学習に使用できるかも、、（時間制限的に厳しい）

例；
[                   
[1,2,3,1,2,3], 
[1,2,3,1,2,3],
[3,2,1,3,2,1],
[3,2,1,3,2,1],
[3,2,1,3,2,1]
]

(0,0)に[[1,0]*2]の抜型を使用して左に動かして上記のboardになったと考えて逆算する
そうすると、右の3,3を前に持ってくればよいことがわかるのでboardは、

[                   
[3,1,2,3,1,2], 
[3,1,2,3,1,2],
[3,2,1,3,2,1],
[3,2,1,3,2,1],
[3,2,1,3,2,1]
]

となる。
ー＞(0,0)に[[1,0]*2]の抜型を使用して左に動かして上記のboardになったと考えて逆算する
この部分は乱数で決定すればよいので、
ー＞右の3,3を前に持ってくればよいことがわかる
これを可能とするアルゴリズムを実装する

数字を選ぶ向きは、仮定した行動の逆（上記の例なら、左に動かすので、選ぶのは右）、選ぶ数字の個数は抜き型の行（列）にある1の数
(x,y)に抜型を適応するとすると、選んだ数字が配置されるindexは（ x+(cutterの1のx_index), y+(cutterの1のy_index ）についての各数字に対応する組み合わせ
"""